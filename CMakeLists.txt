CMAKE_MINIMUM_REQUIRED(VERSION 3.21)

OPTION (BUILD_SHARED_LIBS "Build using shared libraries" ON)
OPTION(VKH_ENABLE_VMA "enable Vulkan Memory Allocator" ON)

if (VKH_ENABLE_VMA)
	SET(LANG "CXX")
ELSE()
	SET(LANG "C")
ENDIF()
SET(CMAKE_CXX_STANDARD 11)

PROJECT(vkh VERSION 0.1.0 DESCRIPTION "Vulkan helpers library" LANGUAGES ${LANG})

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE Release)
ENDIF()

MESSAGE(STATUS "${CMAKE_BUILD_TYPE} build.")


if (CMAKE_BUILD_TYPE STREQUAL "Debug")
	ADD_DEFINITIONS (-DDEBUG)
	OPTION(ENABLE_VALIDATION "enable vulkan validation layer" ON)
	IF (UNIX)
		SET(CMAKE_${LANG}_FLAGS "-Wall -Wno-extra -Wno-unknown-pragmas")
	ELSEIF (MSVC)
		SET(CMAKE_${LANG}_FLAGS "/W4 /wd4204 /wd4221 /wd4100")
	ENDIF()
ELSE()
	UNSET(ENABLE_VALIDATION CACHE)
	IF (UNIX)
		SET(CMAKE_${LANG}_FLAGS "-w")
	ELSEIF(MSVC)
		SET(CMAKE_${LANG}_FLAGS "/W0")
	ENDIF()
ENDIF()

if (${LANG} EQUAL "C" AND MSVC)
	SET(CMAKE_C_FLAGS "/TC ${CMAKE_C_FLAGS}")
endif ()

IF (VKH_ENABLE_VMA)
	ADD_DEFINITIONS (-DUSE_VMA)
ENDIF ()
IF (ENABLE_VALIDATION)
	ADD_DEFINITIONS (-DVKH_USE_VALIDATION)
ENDIF ()

FIND_PACKAGE(Vulkan REQUIRED)

INCLUDE(GNUInstallDirs)

FILE(GLOB sources src/*.c)
if (VKH_ENABLE_VMA)
	LIST(APPEND sources src/VmaUsage.cpp)
ENDIF()

CONFIGURE_FILE(vkh.pc.in vkh.pc @ONLY)
INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/vkh.pc DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/pkgconfig)

ADD_LIBRARY("${PROJECT_NAME}" ${sources})

SET_TARGET_PROPERTIES("${PROJECT_NAME}" PROPERTIES
		OUTPUT_NAME ${PROJECT_NAME}
		VERSION ${PROJECT_VERSION}
		SOVERSION 1
		C_STANDARD 11
		C_EXTENSIONS OFF
		PUBLIC_HEADER include/vkh.h
)
TARGET_INCLUDE_DIRECTORIES("${PROJECT_NAME}"
	PRIVATE
		${CMAKE_CURRENT_SOURCE_DIR}/src
	PUBLIC
		${CMAKE_CURRENT_SOURCE_DIR}/include
		${Vulkan_INCLUDE_DIRS}
)
TARGET_LINK_LIBRARIES("${PROJECT_NAME}"
	PUBLIC
		${Vulkan_LIBRARIES}
)
INSTALL(TARGETS "${PROJECT_NAME}"
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
	PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
